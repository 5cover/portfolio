@charset "UTF-8";
@property --bg-img {
  syntax: "*";
  inherits: false;
}
:root {
  font-family: Roboto, system-ui;
  /* Workaround until relative colors get widespread support */
  --color-accent-bg-rgb: 166, 97, 68;
  --color-bg-rgb: 238, 238, 238;
  --color-fg-rgb: 17, 17, 17;
  --color-lvl1-rgb: 221, 221, 221;
  --color-lvl2-rgb: 204, 204, 204;
  --color-lvl3-rgb: 187, 187, 187;
  --color-bg: rgb(var(--color-bg-rgb));
  --color-fg: rgb(var(--color-fg-rgb));
  --color-lvl1: rgb(var(--color-lvl1-rgb));
  --color-lvl2: rgb(var(--color-lvl2-rgb));
  --color-lvl3: rgb(var(--color-lvl3-rgb));
  --color-accent-bg: rgb(var(--color-accent-bg-rgb));
  color: var(--color-fg);
  background-color: var(--color-bg);
  font-size: 20.57px;
  scroll-behavior: smooth;
  scrollbar-color: gray transparent;
}

:root[data-theme=dark] {
  --color-bg-rgb: 17, 17, 17;
  --color-fg-rgb: 238, 238, 238;
  --color-lvl1-rgb: 34, 34, 34;
  --color-lvl2-rgb: 51, 51, 51;
  --color-lvl3-rgb: 68, 68, 68;
}

@media (prefers-color-scheme: dark) {
  :root[data-theme=system] {
    --color-bg-rgb: 17, 17, 17;
    --color-fg-rgb: 238, 238, 238;
    --color-lvl1-rgb: 34, 34, 34;
    --color-lvl2-rgb: 51, 51, 51;
    --color-lvl3-rgb: 68, 68, 68;
  }
}
* {
  box-sizing: border-box;
  transition-duration: 0.3333333333s;
  transition-property: background-color, background-attachment, background-image, background-origin, background-position, background-repeat, background-size, transform, opacity, filter, -webkit-background-clip, -webkit-text-decoration;
  transition-property: background-color, background-attachment, background-clip, background-image, background-origin, background-position, background-repeat, background-size, transform, opacity, filter, text-decoration;
  transition-property: background-color, background-attachment, background-clip, background-image, background-origin, background-position, background-repeat, background-size, transform, opacity, filter, text-decoration, -webkit-background-clip, -webkit-text-decoration;
}

/* Blink issue: transitions stack (children wait for parents before doing their own transition) */
/* Solution: apply all transitions only to leaf elements */
:not(:has(*)) {
  transition-property: background-color, background-attachment, background-image, background-origin, background-position, background-repeat, background-size, color, transform, opacity, fill, stroke, filter, -webkit-background-clip, -webkit-text-decoration;
  transition-property: background-color, background-attachment, background-clip, background-image, background-origin, background-position, background-repeat, background-size, color, transform, opacity, fill, stroke, filter, text-decoration;
  transition-property: background-color, background-attachment, background-clip, background-image, background-origin, background-position, background-repeat, background-size, color, transform, opacity, fill, stroke, filter, text-decoration, -webkit-background-clip, -webkit-text-decoration;
}

.iconed-text {
  display: inline-flex;
  align-items: center;
}
.iconed-text :is(img, svg):first-child {
  height: 1em;
  width: auto;
  margin-right: 0.5ch;
}

.content-block {
  border-radius: 1em;
  background-color: var(--color-lvl1);
  padding: 1em;
  align-self: center;
  max-width: min(100%, 80ch);
}
.content-block h2 {
  margin-bottom: 0.5em;
}

.fi {
  color: transparent;
}

body,
h1,
h2,
h3,
h4,
ul,
ol,
p,
figure,
input,
samp,
code,
kbd,
pre,
blockquote {
  margin: 0;
  padding: 0;
}

blockquote {
  padding-left: calc(1em - 0.3090169944ch);
  margin-left: calc(min(1vw, 1em) - 0.3090169944ch);
  width: -moz-fit-content;
  width: fit-content;
  border-left: 0.6180339887ch solid var(--color-lvl2);
}
blockquote footer {
  text-align: right;
}

:not(pre) > :is(code, samp, kbd) {
  background-color: var(--color-lvl2);
  padding: 0.1lh 0.4ch;
  border-radius: 0.25lh;
}

pre {
  background-color: var(--color-lvl2);
  padding: 0.5lh 2ch;
  border-radius: 0.25lh;
}

small {
  color: rgba(var(--color-fg-rgb), 0.5);
}

p {
  line-height: 3.125ex;
  max-width: 60ch;
}

h1 {
  font-size: 36px;
  font-weight: 500;
  width: -moz-fit-content;
  width: fit-content;
}

h2 {
  font-size: 28.8px;
  font-weight: 500;
}

h3 {
  font-size: 26.4px;
  font-weight: 500;
}

h4 {
  font-size: 24px;
  font-weight: 500;
}

body {
  max-width: 100%;
  min-height: 100vh;
  display: grid;
  gap: 3em;
  grid-template-rows: auto 1fr auto;
}
body > * {
  max-width: inherit;
}

a:not(:is(:hover, :focus-within, :focus)) {
  text-decoration: none;
}

a:not(.link, a[id^=cite-], .fi) {
  color: inherit;
}

/* Opt-in styling: link colors */
.link:link, a[id^=cite-]:link {
  color: #a66144;
}

.link:visited, a[id^=cite-]:visited {
  color: #91553b;
}

.link:is(:hover, :focus-within, :focus), a[id^=cite-]:is(:hover, :focus-within, :focus) {
  color: #be7c60;
}

.link[target=_blank]:after, a[target=_blank][id^=cite-]:after {
  align-self: normal;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  padding-left: 1px;
  text-indent: initial;
  unicode-bidi: isolate;
  vertical-align: text-top;
  content: "ðŸ¡­";
  display: inline-block;
  font-size: 40%;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

/* Opt-in styling: figures */
.figure {
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  max-width: min(100%, 26em);
}
.figure > figcaption {
  padding: 0.625lh 2.5ch;
  border-radius: 0.3125lh;
  text-align: center;
}
.figure > :not(figcaption) {
  width: 100%;
  max-width: 100%;
  height: auto;
  max-height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}

body > header {
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  padding: 1em 2em;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  -moz-column-gap: 2em;
       column-gap: 2em;
  row-gap: 1em;
  justify-content: space-between;
  height: -moz-fit-content;
  height: fit-content;
}
body > header .list-flags {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
body > header nav {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  -moz-column-gap: 3em;
       column-gap: 3em;
  row-gap: 1.5em;
}
body > header nav > ul {
  display: flex;
  list-style-type: none;
  -moz-column-gap: 2em;
       column-gap: 2em;
  row-gap: 1em;
  flex-wrap: wrap;
}
body > header nav > ul a {
  font-size: 24px;
}
body > header nav a[href="#"] {
  text-decoration: underline;
}

main {
  grid-row: 2;
  display: flex;
}

body > footer {
  border-width: 1px 0 0 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  padding: 1em 2em;
  grid-row: 3;
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media screen and (min-width: 570px) {
  body > footer small {
    margin-left: 50%;
    transform: translateX(-50%);
  }
}
body > footer a > :is(img, svg):is(:hover, :focus-within, :focus) {
  transform: scale(1.15);
}
@media (prefers-reduced-motion: reduce) {
  body > footer a > :is(img, svg):is(:hover, :focus-within, :focus) {
    transform: none;
  }
}

.theme-switches {
  display: flex;
  border-radius: 0.25em;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}
.theme-switches input {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
}
.theme-switches label {
  position: relative;
  padding: 0.25em;
  width: 2em;
  display: flex;
  align-items: center;
  justify-content: center;
}
.theme-switches label:last-of-type {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}
.theme-switches label:first-of-type {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}
.theme-switches label:has(input:is(:hover, :focus-within, :focus)) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 0.5);
}
.theme-switches label:has(input:checked) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 1);
}
.theme-switches label + label {
  border-width: 0 0 0 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}
.theme-switches label input {
  cursor: pointer;
}

.gray-when-not-hover:not(:is(:hover, :focus-within, :focus)) {
  filter: grayscale(100%);
  opacity: 0.5;
}

.button-link {
  padding: 0.5lh 2ch;
  border-radius: 0.25lh;
  background-color: var(--color-lvl2);
  display: block;
  margin: 0 auto;
  width: -moz-fit-content;
  width: fit-content;
}
.button-link:is(:hover, :focus-within, :focus) {
  transform: scale(1.05);
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 1);
}
@media (prefers-reduced-motion: reduce) {
  .button-link:is(:hover, :focus-within, :focus) {
    transform: none;
  }
}
.button-link:is(:hover, :focus-within, :focus) :link {
  text-decoration: none;
}

.list-rect {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
.list-rect > * {
  padding: 0.2lh 0.8ch;
  border-radius: 0.4lh;
  font-size: 18px;
}

.list-link {
  display: flex;
  list-style-type: none;
}

.list-project {
  gap: 1em;
  display: flex;
  flex-flow: row wrap;
  /* Increase z-index to stand out above the card link */
}
.list-project :is(.list-link, .list-rect) > * {
  z-index: 1;
}
.list-project .link, .list-project a[id^=cite-],
.list-project abbr {
  z-index: 1;
  /* Creates a stacking context */
  position: relative;
}
.list-project > * {
  position: relative;
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-lvl2-rgb), 0.85), rgba(var(--color-lvl2-rgb), 0.85)), padding-box var(--bg-img-project, rgb(var(--color-lvl2-rgb))) no-repeat;
  background-size: cover;
  list-style-type: none;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  display: grid;
  grid-template: min-content repeat(4, auto) min-content/1fr auto;
  row-gap: 0.5em;
  border-radius: 0.75em;
  padding: 0.75em;
  width: 20em;
  /* Required to clip the :before pseudo-element to the card's boundaries */
  overflow: hidden;
}
.list-project > * .list-rect {
  grid-column: 1/3;
}
.list-project > * .list-rect > :is(:hover, :focus-within, :focus) {
  transform: scale(1.15);
  z-index: 1;
}
@media (prefers-reduced-motion: reduce) {
  .list-project > * .list-rect > :is(:hover, :focus-within, :focus) {
    transform: none;
  }
}
.list-project > * h3 > a {
  text-decoration: none;
}
.list-project > * h3 > a:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.list-project > * .logo {
  grid-row: 2/6;
  grid-column: 2;
  height: 4lh;
  width: auto;
  max-width: 25ch;
  -o-object-fit: contain;
     object-fit: contain;
  margin: auto 0;
}
.list-project > * h3 {
  grid-row: 2;
}
.list-project > * .context {
  grid-row: 3;
}
.list-project > * .status {
  grid-row: 4;
}
.list-project > * .abstract {
  grid-row: 5;
}
.list-project > * .list-link {
  gap: 0.5em;
  grid-row: 6;
  grid-column: 1/3;
  flex-direction: row-reverse;
  align-items: flex-end;
}
.list-project > * .list-link :is(img, svg) {
  height: 1.5em;
  width: 1.5em;
  -o-object-fit: contain;
     object-fit: contain;
}
.list-project > * .list-link > :is(:hover, :focus-within, :focus) {
  transform: scale(1.15);
  z-index: 1;
}
@media (prefers-reduced-motion: reduce) {
  .list-project > * .list-link > :is(:hover, :focus-within, :focus) {
    transform: none;
  }
}
.list-project > *:is(:hover, :focus-within, :focus) {
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-accent-bg-rgb), 0.85), rgba(var(--color-accent-bg-rgb), 0.85)), padding-box var(--bg-img-project, rgb(var(--color-accent-bg-rgb))) no-repeat;
  background-size: cover;
}
.list-project > *:is(:hover, :focus-within, :focus) .list-rect > * {
  background-color: var(--color-lvl2);
}
.list-project > *:is(:hover, :focus-within, :focus) > :not(.list-rect) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
}
.list-project > *:is(:hover, :focus-within, :focus) .link, .list-project > *:is(:hover, :focus-within, :focus) a[id^=cite-] {
  text-decoration: underline;
}
.list-project > *:not(:is(:hover, :focus-within, :focus)) .list-rect > * {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 1);
}

.definition {
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-lvl2-rgb), 0.9), rgba(var(--color-lvl2-rgb), 0.9)), padding-box var(--bg-img-definition, rgb(var(--color-lvl2-rgb))) no-repeat;
  background-size: cover;
  background-color: var(--color-lvl2);
  border-radius: 0.75em;
  display: grid;
  font-size: 0.8em;
  grid-template: 1fr 1fr auto/1fr auto;
  padding: 0.75em;
  position: relative;
}
.definition :is(img, svg) {
  height: 2.5lh;
  width: auto;
  -o-object-fit: contain;
     object-fit: contain;
}
.definition .link, .definition a[id^=cite-],
.definition abbr {
  z-index: 1;
  /* Creates a stacking context */
  position: relative;
}
.definition > h4 a {
  text-decoration: none;
}
.definition > h4 a:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.definition > :is(img, svg) {
  grid-row: 1/3;
  grid-column: 2;
}
.definition > p:nth-last-child(2) {
  grid-row: 2;
  grid-column: 1/3;
}
.definition > p:nth-last-child(1) {
  grid-row: 3;
  grid-column: 1/3;
}
.definition-tooltip {
  width: -moz-max-content;
  width: max-content;
  left: -0.75em;
  bottom: 110%;
  position: absolute;
}
.definition-tooltip:is(:hover, :focus-within, :focus), .definition-tooltip-trigger:is(:hover, :focus-within, :focus) ~ .definition-tooltip {
  opacity: 1;
  z-index: 2;
  transition-delay: 500ms;
}
.definition-tooltip-trigger:not(:is(:hover, :focus-within, :focus)) ~ .definition-tooltip:not(:is(:hover, :focus-within, :focus)) {
  transition-delay: 250ms;
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0;
}

:has(> .definition-tooltip) {
  position: relative;
}

.definition-tooltip-trigger {
  cursor: pointer;
  font-style: italic;
}

body {
  gap: 0;
}

main {
  flex-direction: column;
  justify-content: space-between;
  gap: 1.5em;
  padding: 3em;
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-bg-rgb), 0.9), rgba(var(--color-bg-rgb), 0.9)), padding-box var(--bg-img, rgb(var(--color-bg-rgb))) no-repeat;
  background-size: cover;
}

h2 {
  margin: 0.5em 0;
}

h3 {
  margin-top: 0.5em;
}

a[id^=cite-] {
  align-self: normal;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  padding-left: 1px;
  text-indent: initial;
  unicode-bidi: isolate;
  vertical-align: text-top;
  white-space: nowrap;
  font-size: 60%;
}

#project-header {
  display: grid;
  grid-template: repeat(5, auto)/auto auto;
  row-gap: 1em;
}
#project-header .list-rect {
  grid-row: 1;
  grid-column: 1/3;
}
#project-header .list-rect > * {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 1);
}
#project-header .list-rect > *:is(:hover, :focus-within, :focus) {
  transform: scale(1.15);
  z-index: 1;
}
@media (prefers-reduced-motion: reduce) {
  #project-header .list-rect > *:is(:hover, :focus-within, :focus) {
    transform: none;
  }
}
#project-header h2 {
  grid-row: 2;
  font-size: 42px;
}
#project-header .logo {
  align-self: center;
  margin-left: auto;
  width: auto;
}
@media screen and (min-width: 701px) {
  #project-header .logo {
    max-height: 100%;
    height: auto;
    grid-column: 2;
    grid-row: 1/6;
  }
}
@media screen and (max-width: 700px) {
  #project-header .logo {
    grid-row: 2;
    height: 3lh;
  }
}
#project-header .abstract {
  grid-row: 3;
}
#project-header .status-context {
  grid-row: 4;
  display: flex;
  gap: min(5vh, 5em);
  align-items: baseline;
}
#project-header .status-context small {
  display: inline-block;
  font-size: 100%;
}

.list-link {
  gap: 1em;
  flex-wrap: wrap;
}
.list-link a {
  display: block;
  padding: 0.375lh 1.5ch;
  border-radius: 0.25lh;
  background-color: var(--color-lvl2);
  text-decoration: none;
}
.list-link a:is(:hover, :focus-within, :focus) {
  transform: scale(1.05);
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-bg-rgb), 1);
}
@media (prefers-reduced-motion: reduce) {
  .list-link a:is(:hover, :focus-within, :focus) {
    transform: none;
  }
}
.list-link a:is(:hover, :focus-within, :focus) :link {
  text-decoration: none;
}
.list-link .iconed-text {
  display: inline-flex;
  align-items: center;
}
.list-link .iconed-text :is(img, svg):first-child {
  height: 2em;
  width: auto;
  margin-right: 1ch;
}

#story:has(:not(:only-child)) {
  text-align: justify;
  -moz-column-width: 60ch;
       column-width: 60ch;
}
#story figure {
  max-width: 60ch;
}
#story p:not(:first-child) {
  margin-top: 0.5lh;
}
#story p:not(:last-child) {
  margin-bottom: 0.5lh;
}

.list-reference {
  padding-left: 2em;
}

.ref-backlink {
  vertical-align: top;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  font-size: 80%;
}

#technologies,
#team {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
#technologies > *,
#team > * {
  flex-shrink: 1;
  min-width: -moz-min-content;
  min-width: min-content;
}
#technologies > *:is(:hover, :focus-within, :focus),
#team > *:is(:hover, :focus-within, :focus) {
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-accent-bg-rgb), 0.9), rgba(var(--color-accent-bg-rgb), 0.9)), padding-box var(--bg-img-definition, rgb(var(--color-accent-bg-rgb))) no-repeat;
  background-size: cover;
}

#gallery {
  display: flex;
  flex-wrap: wrap;
  gap: 2em;
}
#gallery figure {
  display: flex;
  flex-flow: column;
  justify-content: space-between;
}
#gallery iframe {
  background-color: white;
  width: -moz-fit-content;
  width: fit-content;
  height: 100%;
  min-height: 13em;
}
#gallery iframe + figcaption {
  border-width: 1px 0 0 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}/*# sourceMappingURL=project.css.map */