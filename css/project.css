@media (prefers-reduced-motion) {
  /* styles to apply if a user's device settings are set to reduced motion */
}
:root {
  font-family: Roboto, system-ui;
  /* Workaround until relative colors get widespread support */
  --color-accent-bg-rgb: 166, 97, 68;
  --color-bg-rgb: 238, 238, 238;
  --color-fg-rgb: 17, 17, 17;
  --color-lvl1-rgb: 221, 221, 221;
  --color-lvl2-rgb: 204, 204, 204;
  --color-lvl3-rgb: 187, 187, 187;
  --color-bg: rgb(var(--color-bg-rgb));
  --color-fg: rgb(var(--color-fg-rgb));
  --color-lvl1: rgb(var(--color-lvl1-rgb));
  --color-lvl2: rgb(var(--color-lvl2-rgb));
  --color-lvl3: rgb(var(--color-lvl3-rgb));
  --color-accent-bg: rgb(var(--color-accent-bg-rgb));
  color: var(--color-fg);
  background-color: var(--color-bg);
  font-size: 20.57px;
  scroll-behavior: smooth;
}

* {
  transition: background-color 0.3333333333s, color 0.3333333333s, transform 0.3333333333s, opacity 0.3333333333s, fill 0.3333333333s, stroke 0.3333333333s, filter 0.3333333333s;
  box-sizing: border-box;
}

:root[data-theme=dark] {
  --color-bg-rgb: 17, 17, 17;
  --color-fg-rgb: 238, 238, 238;
  --color-lvl1-rgb: 34, 34, 34;
  --color-lvl2-rgb: 51, 51, 51;
  --color-lvl3-rgb: 68, 68, 68;
}

@media (prefers-color-scheme: dark) {
  :root[data-theme=system] {
    --color-bg-rgb: 17, 17, 17;
    --color-fg-rgb: 238, 238, 238;
    --color-lvl1-rgb: 34, 34, 34;
    --color-lvl2-rgb: 51, 51, 51;
    --color-lvl3-rgb: 68, 68, 68;
  }
}
/* An icon sized to the text next to it */
.text-icon {
  display: inline-block;
  height: 1cap;
  width: auto;
  margin-right: 0.5ch;
  vertical-align: baseline;
}

.content-block {
  border-radius: 1em;
  background-color: var(--color-lvl1);
  padding: 1em;
  align-self: center;
  max-width: min(100vw, 80ch);
}
.content-block h2 {
  margin-bottom: 0.5em;
}

.fi {
  color: transparent;
}

body,
h1,
h2,
h3,
h4,
ul,
p,
figure,
input {
  margin: 0;
  padding: 0;
}

small {
  color: rgba(var(--color-fg-rgb), 0.5);
}

p {
  line-height: 3.125ex;
  max-width: 60ch;
}

h1 {
  font-size: 36px;
  font-weight: 500;
  width: -moz-fit-content;
  width: fit-content;
}

h2 {
  font-size: 28.8px;
  font-weight: 500;
}

h3 {
  font-size: 26.4px;
  font-weight: 500;
}

h4 {
  font-size: 24px;
  font-weight: 500;
}

img,
svg {
  vertical-align: middle;
}

body {
  max-width: 100vw;
  display: grid;
  gap: 3em;
  grid-template-rows: auto 1fr auto;
}
body > * {
  max-width: inherit;
}

/* Opt-in styling : link colors */
.link:link {
  color: #a66144;
}

.link:visited {
  color: #91553b;
}

.link:is(:hover, :focus-within, :focus) {
  color: #be7c60;
}

a:not(:is(:hover, :focus-within, :focus)) {
  text-decoration: none;
}

a:not(.link, .fi) {
  color: inherit;
}

/* Opt-in styling : figures */
.figure {
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  max-width: 33.3333333333vw;
}
.figure > figcaption {
  padding: 0.625lh 2.5ch;
  text-align: center;
}
.figure > :not(figcaption) {
  width: 100%;
  max-width: 100%;
  height: auto;
  max-height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}

body > header {
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  padding: 1em 2em;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  -moz-column-gap: 2em;
       column-gap: 2em;
  row-gap: 1em;
  justify-content: space-between;
  height: -moz-fit-content;
  height: fit-content;
}
body > header .list-flags {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
body > header nav {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  -moz-column-gap: 3em;
       column-gap: 3em;
  row-gap: 1.5em;
}
body > header nav > ul {
  display: flex;
  list-style-type: none;
  -moz-column-gap: 2em;
       column-gap: 2em;
  row-gap: 1em;
  flex-wrap: wrap;
}
body > header nav > ul a {
  font-size: 24px;
}
body > header nav a[href="#"] {
  text-decoration: underline;
}

main {
  grid-row: 2;
  display: flex;
}

body > footer {
  border-width: 1px 0 0 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl1);
  padding: 1em 2em;
  border-top-width: 1px;
  grid-row: 3;
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media screen and (min-width: 570px) {
  body > footer small {
    margin-left: 50%;
    transform: translateX(-50%);
  }
}
body > footer a > svg:is(:hover, :focus-within, :focus) {
  transform: scale(1.15);
}

section h2 {
  text-align: center;
}

.theme-switches {
  display: flex;
  border-radius: 0.25em;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}
.theme-switches input {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
}
.theme-switches label {
  position: relative;
  padding: 0.25em;
  width: 2em;
  display: flex;
  align-items: center;
  justify-content: center;
}
.theme-switches label:last-of-type {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}
.theme-switches label:first-of-type {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}
.theme-switches label:has(input:is(:hover, :focus-within, :focus)) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: var(--color-accent-bg);
}
.theme-switches label:has(input:checked) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: var(--color-accent-bg);
}
.theme-switches label + label {
  border-width: 0 0 0 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}
.theme-switches label input {
  cursor: pointer;
}

.hover-sensitive-list > li:is(:hover, :focus-within, :focus),
.hover-sensitive-list > li.hover {
  transform: scale(1.05);
  z-index: 1;
}

.gray-when-not-hover:not(:is(:hover, :focus-within, :focus)) {
  filter: grayscale(100%);
  opacity: 0.5;
}

.button-link {
  padding: 0.5lh 2ch;
  display: block;
  margin: 0 auto;
  width: -moz-fit-content;
  width: fit-content;
  background-color: var(--color-lvl2);
  border-radius: 0.5em;
}
.button-link:is(:hover, :focus-within, :focus) {
  transform: scale(1.05);
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: var(--color-accent-bg);
}

.list-tag {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
.list-tag > * {
  padding: 0.1875lh 0.75ch;
  font-size: 18px;
  border-radius: 0.4em;
}

.list-anchor {
  list-style-type: none;
  display: flex;
}
.list-anchor > li:is(:hover, :focus-within, :focus),
.list-anchor > li.hover {
  transform: scale(1.15);
  z-index: 1;
}

.list-project {
  gap: 1em;
  display: flex;
  flex-flow: row wrap;
  /* Increase z-index to stand out above the card link */
}
.list-project :is(.list-anchor, .list-tag) > li {
  z-index: 1;
}
.list-project .link,
.list-project abbr {
  z-index: 1;
  /* Creates a stacking context */
  position: relative;
}
.list-project .list-anchor {
  gap: 0.5em;
}
.list-project .list-anchor svg,
.list-project .list-anchor img {
  height: 1.5em;
  width: 1.5em;
  -o-object-fit: contain;
     object-fit: contain;
}
.list-project > li {
  position: relative;
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-lvl2-rgb), 0.85), rgba(var(--color-lvl2-rgb), 0.85)), padding-box var(--bg-img, rgb(var(--color-lvl2-rgb))) no-repeat;
  background-size: cover;
  list-style-type: none;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  display: grid;
  grid-template: min-content repeat(4, auto) min-content/1fr auto;
  row-gap: 0.5em;
  border-radius: 0.75em;
  padding: 0.75em;
  width: 20em;
  /* Required to clip the :before pseudo-element to the card's boundaries */
  overflow: hidden;
}
.list-project > li .list-tag {
  grid-column: 1/3;
}
.list-project > li .list-tag > li:is(:hover, :focus-within, :focus),
.list-project > li .list-tag > li.hover {
  transform: scale(1.15);
  z-index: 1;
}
.list-project > li .list-tag > li {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: var(--color-accent-bg);
}
.list-project > li h3 > a {
  text-decoration: none;
}
.list-project > li h3 > a:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.list-project > li .logo {
  grid-row: 2/6;
  grid-column: 2;
  height: 4lh;
  width: auto;
  max-width: 25ch;
  -o-object-fit: contain;
     object-fit: contain;
  margin: auto 0;
}
.list-project > li h3 {
  grid-row: 2;
}
.list-project > li .context {
  grid-row: 3;
}
.list-project > li .status {
  grid-row: 4;
}
.list-project > li .abstract {
  grid-row: 5;
}
.list-project > li .list-anchor {
  grid-row: 6;
  grid-column: 1/3;
  flex-direction: row-reverse;
  align-items: flex-end;
}
.list-project > li:is(:hover, :focus-within, :focus) {
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-accent-bg-rgb), 0.9), rgba(var(--color-accent-bg-rgb), 0.9)), padding-box var(--bg-img, rgb(var(--color-accent-bg-rgb))) no-repeat;
  background-size: cover;
}
.list-project > li:is(:hover, :focus-within, :focus) .list-tag > li {
  background-color: var(--color-lvl2);
}
.list-project > li:is(:hover, :focus-within, :focus) :not(.list-tag > li) {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
}
.list-project > li:is(:hover, :focus-within, :focus) .link {
  text-decoration: underline;
}

:has(> .definition-tooltip) {
  position: relative;
}

.definition-tooltip-trigger {
  cursor: pointer;
  font-style: italic;
}

.definition-tooltip {
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-lvl2-rgb), 0.9), rgba(var(--color-lvl2-rgb), 0.9)), padding-box var(--bg-img-definition, rgb(var(--color-lvl2-rgb))) no-repeat;
  background-size: cover;
  background-color: var(--color-lvl2);
  border-radius: 0.75em;
  left: -0.75em;
  bottom: 110%;
  display: grid;
  font-size: 0.8em;
  grid-template: 1fr 1fr auto/1fr auto;
  padding: 0.75em;
  position: absolute;
  width: -moz-max-content;
  width: max-content;
}
.definition-tooltip svg,
.definition-tooltip img {
  height: 2.5lh;
  width: auto;
  -o-object-fit: contain;
     object-fit: contain;
}
.definition-tooltip .link,
.definition-tooltip abbr {
  /* Creates a stacking context */
  z-index: 1;
  position: relative;
}
.definition-tooltip > h4 a {
  text-decoration: none;
}
.definition-tooltip > h4 a:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.definition-tooltip > img,
.definition-tooltip > svg {
  grid-row: 1/3;
  grid-column: 2;
}
.definition-tooltip > p:nth-last-child(2) {
  grid-row: 2;
  grid-column: 1/3;
}
.definition-tooltip > p:nth-last-child(1) {
  grid-row: 3;
  grid-column: 1/3;
}
.definition-tooltip:is(:hover, :focus-within, :focus), .definition-tooltip-trigger:is(:hover, :focus-within, :focus) ~ .definition-tooltip {
  opacity: 1;
  z-index: 2;
  transition-delay: 500ms;
}
.definition-tooltip-trigger:not(:is(:hover, :focus-within, :focus)) ~ .definition-tooltip:not(:is(:hover, :focus-within, :focus)) {
  transition-delay: 250ms;
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0;
}

body {
  gap: 0;
}

main {
  flex-direction: column;
  justify-content: space-between;
  gap: 1em;
  padding: 3em;
  /* sometimes the gradient is a little bit smaller than the image. origin border-box as a hack. */
  background: border-box linear-gradient(rgba(var(--color-bg-rgb), 0.9), rgba(var(--color-bg-rgb), 0.9)), padding-box var(--bg-img, rgb(var(--color-bg-rgb))) no-repeat;
  background-size: cover;
}

.list-tag > li {
  color: white;
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: var(--color-accent-bg);
}

#project-header {
  display: grid;
  grid-template: repeat(5, auto)/auto 1fr;
  gap: 1em;
}
#project-header .list-tag {
  grid-row: 1;
  grid-column: 1/3;
}
#project-header h2 {
  grid-row: 2;
  font-size: 42px;
}
#project-header .logo {
  margin-left: auto;
  height: 100%;
  width: auto;
  display: block;
  grid-column: 2;
  grid-row: 1/6;
}
#project-header .abstract {
  grid-row: 3;
}
#project-header .status-context {
  grid-row: 4;
  display: flex;
  gap: 5em;
  align-items: baseline;
}
#project-header .status-context small {
  display: inline-block;
  font-size: 100%;
}

#story {
  text-align: justify;
}
@media screen and (min-width: 120ch) {
  #story {
    -moz-columns: 2;
         columns: 2;
  }
}
#story figure {
  max-width: 60ch;
}
#story p:not(:first-child) {
  margin-top: 0.5lh;
}
#story p:not(:last-child) {
  margin-bottom: 0.5lh;
}

#technologies,
.list-anchor {
  border-width: 1px;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  padding: 0.25lh 1ch;
  background-color: var(--color-lvl1);
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
}
#technologies svg,
#technologies img,
.list-anchor svg,
.list-anchor img {
  height: 3.5em;
  width: 3.5em;
  -o-object-fit: contain;
     object-fit: contain;
}

#gallery {
  display: flex;
  flex-wrap: wrap;
  gap: 2em;
  align-items: stretch;
}
#gallery figure {
  display: flex;
  flex-flow: column;
  justify-content: space-between;
}
#gallery iframe {
  background-color: white;
  width: -moz-fit-content;
  width: fit-content;
  height: 100%;
  min-height: 13em;
}
#gallery iframe + figcaption {
  border-width: 1px 0 0 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
}/*# sourceMappingURL=project.css.map */