/* Emulates infinity. */
/* Hover state selector  */
/* Graphic element selector */
/* Golden ratio */
/* Horizontal margin of an element whose width spans over the entire viewport */
/* Vertical margin of an element whose width spans over the entire viewport */
/* Maximum length of a line of text */
/* Utilities
 * 
 * Increase stylesheet expressivity. May not be semantic.
 */
/* Super annotation
 *
 * An annotation as an exponent
 */
/* Shallow list item
 *
 * Display contents on children <li>, inherit layout properties. Similar to the HTML transparent content model.
 */
/* Gapped children
 *
 * Display flex, gap based on line height.
 */
/* Justify
 *
 * Justify and hyphenate. Replaces `text-align: justify`.
 */
/* Bring out element
 *
 * Scale the element.
 *
 * $factor: scale() argument -> scaling factor
 */
/* Basic border
 *
 * A basic border around the element. Color is foreground, .125 alpha.
 *
 * $width: border-width value -> border width
 */
/* Accent color foreground 
 *
 * Adapt the foreground to the accent color for better contrast.
 */
/* Accent color
 *
 * Set the background to the accent color and adapt the foreground color.
 *
 * $opacity: number [0..1] -> accent background color opacity
 */
/* Level 1 content
 *
 * Content spanning over the width of the entire viewport. One level of nesting inside the main element (direct child of the main element).
 *
 * $border-width: border-width value -> border width
 */
/* Absolue fill
 *
 * Position absolutely and fill all available space.
 */
/* Hover card 
 *
 * Position relatively. Represents an interactive card covered by an anchor.
 */
/* Hover card target
 *
 * The anchor element of an hover card.
 */
/* Transparent background image
 *
 * Define a transparent background image.
 *
 * $varname-img: <image>                  -> the background image.
 * $color-rgb:   rgb() or rgba() argument -> the backging color (also used as a fallback if $varname-img is not defined)
 * $opacity:     real [0..1]              -> the opacity of the image
 * $origin:      <visual-box>             -> origin of the background image layer
 *
 * As sometimes the gradient is a little bit smaller than the image, the origin of the color background layer is set to `border-box` as a workaround.
 *
 * Todo: fix background color transition. Currently: instant. Expected: transition-duration
 */
/* Absolute center
 *
 * Position absolutely and center in parent, horizontally and vertically.
 */
/* Horizontal box
 *
 * Appropriate padding and radius for an horizontal box.
 *
 * $padding-factor:       number -> padding multiplier
 * $border-radius-factor: number -> border radius multiplier
 */
/* Size graphics
 *
 * Size graphics children accordingly.
 *
 * $height:     height value     -> children graphics height
 * $width:      width value      -> children graphics width
 * $object-fit: object-fit value -> children graphics object-fit
 */
/* Gray when not hover 
 *
 * The element is grayed out when it is not hovered.
 */
.gray-when-not-hover:not(:is(:hover, :focus-within, :focus)) {
  filter: grayscale(100%);
  opacity: 0.5;
}

/* Adapet for accent background color
 *
 * Appropriate styles to maintain legibility when the element has an accent background color.
 */
#search-bar {
  border-width: 1px 1px 1px 0;
  border-style: solid;
  border-color: rgba(var(--color-fg-rgb), 0.125);
  background-color: var(--color-lvl);
  padding: 1em min(2.5vw, 2.5lh);
  display: flex;
  flex-flow: column nowrap;
  gap: 1lh;
  min-width: 61.803398875%;
  width: -moz-min-content;
  width: min-content;
  max-width: 100%;
  border-radius: 0 1em 1em 0;
}
#search-bar h1 {
  margin: 0.5lh 0;
}
#search-bar #search-input {
  max-width: 60ch;
  font-size: 0.8em;
  padding: 0.25lh 1ch;
  border-radius: calc(Infinity * 0.25lh);
}

#list-tag > li,
#list-sorting > li {
  display: contents;
}
#list-tag > li > *,
#list-sorting > li > * {
  padding: inherit;
  margin: inherit;
  border-radius: inherit;
}
#list-tag input,
#list-sorting input {
  display: none;
}
#list-tag label,
#list-sorting label {
  cursor: pointer;
  background-color: var(--color-lvl-next);
}
#list-tag label:has(input:is(:hover, :focus-within, :focus)),
#list-sorting label:has(input:is(:hover, :focus-within, :focus)) {
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-rgb), 0.5);
}
#list-tag label:has(input:checked),
#list-sorting label:has(input:checked) {
  --color-fg: white;
  --color-fg-rgb: 255, 255, 255;
  background-color: rgba(var(--color-accent-rgb), 1);
}

#list-sorting > li {
  padding: 0.25lh 1ch;
  border-radius: calc(Infinity * 0.25lh);
}

#project-list {
  margin: 0 min(2.5vw, 2.5lh);
}/*# sourceMappingURL=projects.css.map */