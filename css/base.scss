/* Base stylesheet */
@media (prefers-reduced-motion) {

    /* styles to apply if a user's device settings are set to reduced motion */
    @mixin bring-out($factor) {}
}

@mixin bring-out($factor) {
    transform: scale($factor);
}

:root {
    font-family: Roboto, system-ui;
    /* Workaround until relative colors get widespread support */
    --color-bg-rgb: 238, 238, 238;
    --color-fg-rgb: 17, 17, 17;
    --color-lvl1-rgb: 221, 221, 221;
    --color-lvl2-rgb: 204, 204, 204;
    --color-lvl3-rgb: 187, 187, 187;
    --color-accent: #a66144;
    --color-bg: rgb(var(--color-bg-rgb));
    --color-fg: rgb(var(--color-fg-rgb));
    --color-lvl1: rgb(var(--color-lvl1-rgb));
    --color-lvl2: rgb(var(--color-lvl2-rgb));
    --color-lvl3: rgb(var(--color-lvl3-rgb));
    --basic-border: solid rgba(var(--color-fg-rgb), .125);
    --huge-val: calc(infinity * 1px);
    --transition: calc(1s / 3) ease;
    color: var(--color-fg);
    background-color: var(--color-bg);
    font-size: 20.57px;
    --distance-1: 60px;
    --distance-2: 40px;
    --distance-3: 25px;
    --distance-4: 15px;
}

* {
    transition:
        background-color var(--transition),
        color var(--transition),
        transform var(--transition),
        opacity var(--transition),
        fill var(--transition),
        filter var(--transition);
    box-sizing: border-box;

    &:link {
        color: #a66144;
    }

    a:hover {
        color: #b07055
    }

    &:visited {
        color: #93553b;
    }
}

[data-theme="dark"] {
    --color-bg-rgb: 17, 17, 17;
    --color-fg-rgb: 238, 238, 238;
    --color-lvl1-rgb: 34, 34, 34;
    --color-lvl2-rgb: 51, 51, 51;
    --color-lvl3-rgb: 68, 68, 68;
}

svg.themed-fill {
    fill: var(--color-fg);
}

small {
    font-size: calc(2em / 3);
    color: rgba(var(--color-fg-rgb), .5)
}

body,
h1,
h2,
h3,
h4,
ul,
p,
figure {
    margin: 0;
    padding: 0;
}

h1 {
    font-size: 36px;
    font-weight: 500;
    width: fit-content;
}

h2 {
    font-size: 28.8px;
    font-weight: 500;
}

h3 {
    font-size: 24px;
    font-weight: 500;
}

h4 {
    font-size: 20px;
    font-weight: 500;
}

ul {
    list-style-type: none;
    display: flex;
}

img,
svg {
    vertical-align: middle;
}

main {
    margin-top: 3em;
    margin-bottom: 3em;
    display: flex;
    flex-flow: column nowrap;
    gap: 3em;
}

/* Borders */
header,
footer,
section {
    border: 0 var(--basic-border);
    background-color: var(--color-lvl1);
    padding: 1em 2em;
}

section,
footer {
    border-top-width: 1px;
}

section,
header {
    border-bottom-width: 1px;
}

section h2 {
    text-align: center;
}

@mixin absolute-fill {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
}

@mixin reset-a {

    &:link,
    &:visited {
        text-decoration: none;
        color: inherit;
    }
}

@mixin hover-card {
    position: relative;
}

@mixin hover-card-target {
    &:after {
        @include absolute-fill;
    }
}

a > svg:hover,
a > svg:focus-within {
    @include bring-out(1.25);
}

footer {
    position: relative;

    p:has(small) {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    p:has(svg) {
        text-align: right;
    }
}

header {
    align-items: center;
    background-color: var(--color-lvl1);
    display: flex;
    flex-wrap: wrap;
    column-gap: 2em;
    row-gap: 1em;
    justify-content: space-between;

    .list-flags {
        flex-wrap: wrap;
        gap: .5em
    }

    /* Theme switch */
    .theme-switch-wrapper {
        display: flex;
        align-items: center;

        .theme-switch {
            display: inline-block;
            height: 1.5em;
            position: relative;
            width: 4em;

            input {
                display: none;
            }
        }
    }

    nav {
        display: flex;
        flex-wrap: wrap;
        align-items: baseline;
        column-gap: 3em;
        row-gap: 1.5em;

        @mixin nav-link {
            @include reset-a;

            &:hover,
            &:focus-within,
            &[href="#"] {
                text-decoration: underline;
            }
        }

        > ul {
            column-gap: 2em;
            row-gap: 1em;
            flex-wrap: wrap;

            a {
                font-size: 24px;
            }
        }

        a {
            @include nav-link;
        }
    }

    .slider {
        background-color: var(--color-lvl3);
        bottom: 0;
        cursor: pointer;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: var(--transition);
        margin: 0 .5em;

        &:before {
            background-color: var(--color-bg);
            bottom: 4px;
            content: "";
            height: 22px;
            left: 4px;
            position: absolute;
            transition: var(--transition);
            width: 22px;
        }

        &.round {
            border-radius: var(--huge-val);

            &:before {
                border-radius: 50%;
            }
        }
    }

    input:checked + .slider {
        background-color: var(--color-accent);

        &:before {
            transform: translateX(30px);
        }
    }
}

.content-block {
    border-radius: 1em;
    background-color: var(--color-lvl1);
    padding: 1em;
    margin-left: auto;
    margin-right: auto;
    width: calc(1vw / .03);
    max-width: 32em;
    height: fit-content;
    max-height: calc(113vw / 3.84);

    h2 {
        margin-bottom: .5em;
    }
}

@mixin hover-sensitive-list($factor) {
    > li {

        &:hover,
        &:focus-within {
            @include bring-out($factor);
            z-index: 1;
        }
    }
}

.hover-sensitive-list {
    @include hover-sensitive-list(1.05);
}

.gray-when-not-hover:not(:hover, :focus-within) {
    filter: grayscale(100%);
    opacity: .5;
}

.list-projects > li {
    @include hover-card;

    h3 > a {
        @include reset-a;
        @include hover-card-target;
    }

    border: 1px var(--basic-border);
    display: grid;
    grid-template: repeat(5, auto) / auto min-content;
    row-gap: .5em;
    border-radius: .75em;
    padding: .75em;
    width: 18em;
    /* Required to clip the :before pseudo-element to the card's boundaries */
    overflow: hidden;

    &:before {
        @include absolute-fill;
        display: block;
        width: 100%;
        height: 100%;
        background: var(--bg-img) no-repeat var(--color-lvl2);
        background-size: cover;
        opacity: .1;
    }

    small {
        font-style: italic
    }

    .list-tags {
        @include hover-sensitive-list(1.25);
        grid-row: 1;
        grid-column: 1;
        gap: .75em;

        > li {
            font-size: 18px;
            background-color: var(--color-accent);
            border-radius: .4em;
            padding: .2em .4em;
            z-index: 1;
        }
    }

    h3 {
        grid-row: 2;
        grid-column: 1;
        margin: .5em 0;
    }

    .status {
        grid-row: 3;
        grid-column: 1 / 3;
    }

    .abstract {
        grid-row: 4;
        grid-column: 1 / 3;
    }

    .logo {
        grid-row: 1 / 3;
        grid-column: 2;
        object-fit: contain;
        height: 4em;
    }

    .list-anchors {
        @include hover-sensitive-list(1.25);
        grid-row: 5;
        grid-column: 1 / 3;
        flex-grow: 1;
        flex-direction: row-reverse;
        align-items: end;

        > li {
            z-index: 1;
        }
    }

    &:hover,
    &:focus-within {
        background-color: var(--color-accent);

        > ul:first-of-type > li {
            background-color: var(--color-lvl2);
        }
    }
}

:has(> .definition-tooltip) {
    position: relative;
}

.definition-tooltip-trigger {
    cursor: pointer;
    font-style: italic;
}

.definition-tooltip {
    grid-template: 1fr auto / repeat(2, auto) 1fr;
    display: grid;
    font-size: .75em;
    border-radius: .75em;
    position: absolute;
    bottom: 1.5rem;
    max-width: 50ch;
    padding: .75em;
    background-color: var(--color-lvl3);
    visibility: hidden;
    opacity: 0;

    > img,
    > svg {
        grid-row: 1 / 3;
        grid-column: 2;
        margin-left: auto;
    }

    > p:nth-last-child(2) {
        grid-row: 2;
        grid-column: 1 / 3;
    }

    > p:nth-last-child(1) {
        grid-row: 3;
        grid-column: 1 / 3;
    }

    &:before {
        @include absolute-fill;
        display: block;
        width: 100%;
        height: 100%;
        background: var(--bg-img) no-repeat var(--color-lvl3);
        background-size: cover;
        opacity: .2;
    }

    /* Add the new arrow pseudo-element */
    &:after {
        content: "";
        position: absolute;
        bottom: -.5em;
        left: 1em;
        border-left: .5em solid transparent;
        border-right: .5em solid transparent;
        border-top: .5em solid var(--color-lvl3);
    }
}

.definition-tooltip-visible {
    visibility: visible;
    opacity: 1;
}